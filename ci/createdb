#!/usr/bin/env python
from os.path import join, dirname
from subprocess import check_output
from ConfigParser import ConfigParser
import sys

class Runner:
    def __init__(self, host, user, passwd, script_base):
        self.host = host
        self.user = user
        self.passwd = passwd
        self.script_base = script_base

    def run(self, db, script):
        print "running {} on database {}".format(script, db)
        if self.passwd:
            command = "mysql -h {0} -u {1} -p{2} {3} < {4}/{5}".format(self.host, self.user, self.passwd, db, self.script_base, script)
        else:
            command = "mysql -h {0} -u {1} {2} < {3}/{4}".format(self.host, self.user, db, self.script_base, script)
        print command
        print check_output(command, shell=True)

    def execute(self, query):
        print 'running "{}"'.format(query)
        if self.passwd:
            command = 'mysql -h {0} -u {1} -p{2} -e "{3}"'.format(self.host, self.user, self.passwd, query)
        else:
            command = 'mysql -h {0} -u {1} -e "{2}"'.format(self.host, self.user, query)
        print command
        print check_output(command, shell=True)

if __name__=='__main__':
    if len(sys.argv) < 2:
        sys.exit('Usage: %s database-name' % sys.argv[0])
    database = sys.argv[1]

    config = ConfigParser()
    config.read(join(dirname(__file__), '../redirect/config.cfg'))
    host = config.get('mysql', 'host')
    user = config.get('mysql', 'user')
    passwd = config.get('mysql', 'passwd')

    script_base = join(dirname(__file__), '../db')

    runner = Runner(host, user, passwd, script_base)

    runner.execute('drop database if exists {0};'.format(database))
    runner.execute('create database {0};'.format(database))
    runner.run(database, 'init.sql')
